@page "/"
@using FrontEnd.Data
@inject WeatherForecastClient ForecastClient

<script src="https://d3js.org/d3.v4.js"></script>

<PageTitle>Resume Analyzer</PageTitle>

<div id="input" style="display: block;">
    <h1>Enter your resume</h1>
    <p>Please enter your information:</p>
    <table class="table">
        <tbody>
            <tr>
                <td style="width: 20%;">Name: </td>
                <td style="width: 60%px;">
                    <input id="name" asp-for="name" style="width: 100%;" />
                    <span asp-validation-for="name"></span>
                </td>
            </tr>
            <tr>
                <td>Skills: </td>
                <td>
                    <textarea id="skills" asp-for="skills" placeholder="Please separate skills with commas." style="height: 50px; min-height: 50px; width: 100%;"></textarea>
                    <span asp-validation-for="skills"></span>
                </td>
            </tr>
            <tr>
                <td>Experience: </td>
                <td>
                    <textarea id="experience" asp-for="experience" placeholder="Enter any relevant experiences you want to share!" style="height: 100px; min-height: 100px; width: 100%;"></textarea>
                    <span asp-validation-for="experience"></span>
                </td>
            </tr>
        </tbody>
    </table>
    <button id="submit_button" type="button" onclick="analyze()" class="button submit_button">Submit</button>
</div>

<div id="submission" style="display: none;">
    <h1>Provided information: </h1>
    <table class="table">
        <tbody>
            <tr>
                <td style="width: 20%;">Name: </td>
                <td style="width: 60%px;">
                    <input id="subName" asp-for="name" style="width: 100%;" readonly/>
                </td>
            </tr>
            <tr>
                <td>Skills: </td>
                <td>
                    <textarea id="subSkills" asp-for="skills" style="height: 50px; min-height: 50px; width: 100%;" readonly></textarea>
                </td>
            </tr>
            <tr>
                <td>Experience: </td>
                <td>
                    <textarea id="subExp" asp-for="experience" style="height: 100px; min-height: 100px; width: 100%;" readonly></textarea>
                </td>
            </tr>
        </tbody>
    </table>
    <p>See something wrong?</p>
    <button id="submit_button" type="button" onclick="editSubmission()" class="button submit_button">Edit information</button>

    <div id="my_dataviz"></div>
</div>


<script language="JavaScript" type="text/javascript">
    function countSkills(skills_arr, experience) {
        const skillCounts = {};

        skills_arr.forEach(skill => {
            // Escape special characters for RegExp
            const escapedSkill = skill.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
            // Create a pattern to match the skill with word boundaries or special characters
            const pattern = new RegExp('(?:\\b|\\W|^)' + escapedSkill + '(?:\\b|\\W|$)', 'gi');
            const matches = experience.match(pattern);
            skillCounts[skill] = matches ? matches.length : 0;
        });

        return skillCounts;
    }

    function plot(skills_data){
        // set the dimensions and margins of the graph
        var margin = {top: 30, right: 30, bottom: 70, left: 60},
            width = 460 - margin.left - margin.right,
            height = 400 - margin.top - margin.bottom;

        // append the svg object to the body of the page
        var svg = d3.select("#my_dataviz")
        .append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
        .append("g")
            .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");

        // Parse the Data
        d3.json(skills_data, function(data) {

        // X axis
        var x = d3.scaleBand()
        .range([ 0, width ])
        .domain(data.map(function(d) { return d.Country; }))
        .padding(0.2);
        svg.append("g")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x))
        .selectAll("text")
            .attr("transform", "translate(-10,0)rotate(-45)")
            .style("text-anchor", "end");

        // Add Y axis
        var y = d3.scaleLinear()
        .domain([0, 13000])
        .range([ height, 0]);
        svg.append("g")
        .call(d3.axisLeft(y));

        // Bars
        svg.selectAll("mybar")
        .data(data)
        .enter()
        .append("rect")
            .attr("x", function(d) { return x(d.Country); })
            .attr("y", function(d) { return y(d.Value); })
            .attr("width", x.bandwidth())
            .attr("height", function(d) { return height - y(d.Value); })
            .attr("fill", "#69b3a2")

        })
    }

    function analyze(){
        const name = document.getElementById("name").value;
        const skills = document.getElementById("skills").value;
        const experience = document.getElementById("experience").value;
        document.getElementById("subName").value = name;
        document.getElementById("subSkills").value = skills;
        document.getElementById("subExp").value = experience;
        document.getElementById("input").style.display = "none";
        document.getElementById("submission").style.display = "block";
        const skills_arr = String(skills).split(",");
        const skills_data = JSON.stringify(countSkills(skills_arr, String(experience)));
        alert(skills_data);
        plot(skills_data);
    }

    function editSubmission(){
        document.getElementById("submission").style.display = "none";
        document.getElementById("input").style.display = "block";
    }
</script>

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastClient.GetForecastAsync(DateTime.Now);
    }
}

<style>
    .submit_button {
    transition-duration: 0.4s;
    border-radius: 5px;
    border-color: transparent;
    background-color: #04AA6D; /* Green */
    color: white;
    }

    .submit_button:hover {
    background-color: #028051; /* Green */
    color: white;
    }
</style>
